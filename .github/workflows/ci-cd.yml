name: CI/CD with Terraform

on:
  push:
    branches:
      - main

jobs:
  docker:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 18

    - name: Install HTMLHint
      run: npm install -g htmlhint

    - name: Run HTMLHint
      run: htmlhint "**/*.html"

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

    - name: Build Docker Image
      run: docker build -t 05550/text-styler:latest .

    - name: Push Docker Image
      run: docker push 05550/text-styler:latest

  terraform-deploy:
    name: Deploy Infrastructure with Terraform
    runs-on: ubuntu-latest
    needs: docker

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.5.7

    - name: Initialize Terraform
      run: terraform init

    # - name: Plan Terraform
      # run: terraform plan -var="aws_access_key=${{ secrets.TF_AWS_ACCESS_KEY }}" -var="aws_secret_key=${{ secrets.TF_AWS_SECRET_KEY }}"
    - name: Terraform Plan
      run: |
        terraform plan \
          -var="aws_access_key=${{ secrets.TF_AWS_ACCESS_KEY }}" \
          -var="aws_secret_key=${{ secrets.TF_AWS_SECRET_KEY }}" \
          -var="ami=ami-0c02fb55956c7d316"

    - name: Apply Terraform
      run: terraform apply -auto-approve -var="aws_access_key=${{ secrets.TF_AWS_ACCESS_KEY }}" -var="aws_secret_key=${{ secrets.TF_AWS_SECRET_KEY }}"
